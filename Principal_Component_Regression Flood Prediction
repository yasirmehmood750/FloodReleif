{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9666f976",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-26T08:40:00.842431Z",
     "iopub.status.busy": "2024-05-26T08:40:00.841950Z",
     "iopub.status.idle": "2024-05-26T08:40:03.238138Z",
     "shell.execute_reply": "2024-05-26T08:40:03.236940Z"
    },
    "papermill": {
     "duration": 2.406829,
     "end_time": "2024-05-26T08:40:03.240938",
     "exception": false,
     "start_time": "2024-05-26T08:40:00.834109",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n",
    "\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.pipeline import Pipeline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c82c70d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-26T08:40:03.253813Z",
     "iopub.status.busy": "2024-05-26T08:40:03.253196Z",
     "iopub.status.idle": "2024-05-26T08:40:06.053207Z",
     "shell.execute_reply": "2024-05-26T08:40:06.051880Z"
    },
    "papermill": {
     "duration": 2.809514,
     "end_time": "2024-05-26T08:40:06.056019",
     "exception": false,
     "start_time": "2024-05-26T08:40:03.246505",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# importing CSV with training data\n",
    "file_path = '/kaggle/input/flood-regression-dataset/train.csv'\n",
    "    # Read the CSV file into a DataFrame\n",
    "df = pd.read_csv(file_path)\n",
    "\n",
    "X=df.copy()\n",
    "\n",
    "X.drop(columns=['FloodProbability'],inplace=True)\n",
    "\n",
    "y=df[['FloodProbability']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "434357a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-26T08:40:06.069647Z",
     "iopub.status.busy": "2024-05-26T08:40:06.068659Z",
     "iopub.status.idle": "2024-05-26T08:40:06.380314Z",
     "shell.execute_reply": "2024-05-26T08:40:06.379243Z"
    },
    "papermill": {
     "duration": 0.321047,
     "end_time": "2024-05-26T08:40:06.382905",
     "exception": false,
     "start_time": "2024-05-26T08:40:06.061858",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>MonsoonIntensity</th>\n",
       "      <th>TopographyDrainage</th>\n",
       "      <th>RiverManagement</th>\n",
       "      <th>Deforestation</th>\n",
       "      <th>Urbanization</th>\n",
       "      <th>ClimateChange</th>\n",
       "      <th>DamsQuality</th>\n",
       "      <th>Siltation</th>\n",
       "      <th>AgriculturalPractices</th>\n",
       "      <th>...</th>\n",
       "      <th>DrainageSystems</th>\n",
       "      <th>CoastalVulnerability</th>\n",
       "      <th>Landslides</th>\n",
       "      <th>Watersheds</th>\n",
       "      <th>DeterioratingInfrastructure</th>\n",
       "      <th>PopulationScore</th>\n",
       "      <th>WetlandLoss</th>\n",
       "      <th>InadequatePlanning</th>\n",
       "      <th>PoliticalFactors</th>\n",
       "      <th>FloodProbability</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>0.445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>0.450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0.530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>0.535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>0.415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1117952</th>\n",
       "      <td>1117952</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>0.495</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1117953</th>\n",
       "      <td>1117953</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0.480</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1117954</th>\n",
       "      <td>1117954</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0.485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1117955</th>\n",
       "      <td>1117955</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>0.495</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1117956</th>\n",
       "      <td>1117956</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>0.560</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1117957 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              id  MonsoonIntensity  TopographyDrainage  RiverManagement  \\\n",
       "0              0                 5                   8                5   \n",
       "1              1                 6                   7                4   \n",
       "2              2                 6                   5                6   \n",
       "3              3                 3                   4                6   \n",
       "4              4                 5                   3                2   \n",
       "...          ...               ...                 ...              ...   \n",
       "1117952  1117952                 3                   3                4   \n",
       "1117953  1117953                 2                   2                4   \n",
       "1117954  1117954                 7                   3                9   \n",
       "1117955  1117955                 7                   3                3   \n",
       "1117956  1117956                 4                   5                6   \n",
       "\n",
       "         Deforestation  Urbanization  ClimateChange  DamsQuality  Siltation  \\\n",
       "0                    8             6              4            4          3   \n",
       "1                    4             8              8            3          5   \n",
       "2                    7             3              7            1          5   \n",
       "3                    5             4              8            4          7   \n",
       "4                    6             4              4            3          3   \n",
       "...                ...           ...            ...          ...        ...   \n",
       "1117952             10             4              5            5          7   \n",
       "1117953              3             9              5            8          1   \n",
       "1117954              4             6              5            9          1   \n",
       "1117955              7             5              2            3          4   \n",
       "1117956              9             5              5            2          8   \n",
       "\n",
       "         AgriculturalPractices  ...  DrainageSystems  CoastalVulnerability  \\\n",
       "0                            3  ...                5                     3   \n",
       "1                            4  ...                7                     2   \n",
       "2                            4  ...                7                     3   \n",
       "3                            6  ...                2                     4   \n",
       "4                            3  ...                2                     2   \n",
       "...                        ...  ...              ...                   ...   \n",
       "1117952                     10  ...                7                     8   \n",
       "1117953                      3  ...                9                     4   \n",
       "1117954                      3  ...                5                     5   \n",
       "1117955                      6  ...                6                     8   \n",
       "1117956                      4  ...                4                     8   \n",
       "\n",
       "         Landslides  Watersheds  DeterioratingInfrastructure  PopulationScore  \\\n",
       "0                 3           5                            4                7   \n",
       "1                 0           3                            5                3   \n",
       "2                 7           5                            6                8   \n",
       "3                 7           4                            4                6   \n",
       "4                 6           6                            4                1   \n",
       "...             ...         ...                          ...              ...   \n",
       "1117952           7           2                            2                1   \n",
       "1117953           4           3                            7                4   \n",
       "1117954           5           5                            6                5   \n",
       "1117955           5           3                            4                6   \n",
       "1117956           6           5                            5                6   \n",
       "\n",
       "         WetlandLoss  InadequatePlanning  PoliticalFactors  FloodProbability  \n",
       "0                  5                   7                 3             0.445  \n",
       "1                  3                   4                 3             0.450  \n",
       "2                  2                   3                 3             0.530  \n",
       "3                  5                   7                 5             0.535  \n",
       "4                  2                   3                 5             0.415  \n",
       "...              ...                 ...               ...               ...  \n",
       "1117952            4                   6                 4             0.495  \n",
       "1117953            9                   4                 5             0.480  \n",
       "1117954            5                   2                 4             0.485  \n",
       "1117955            7                   6                 4             0.495  \n",
       "1117956            7                   7                 8             0.560  \n",
       "\n",
       "[1117957 rows x 22 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0872bdd8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-26T08:40:06.396246Z",
     "iopub.status.busy": "2024-05-26T08:40:06.395867Z",
     "iopub.status.idle": "2024-05-26T08:40:06.705879Z",
     "shell.execute_reply": "2024-05-26T08:40:06.704766Z"
    },
    "papermill": {
     "duration": 0.319774,
     "end_time": "2024-05-26T08:40:06.708602",
     "exception": false,
     "start_time": "2024-05-26T08:40:06.388828",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#splitting the data into training data and test data ( aorund 20% of data will be used for testing the results whereas 80% for training the model)\n",
    "\n",
    "#X_train contains training data\n",
    "# y_train cotains result set for training data  ( both X_train and y_train will train the model)\n",
    "# X_test contains the test data\n",
    "# y_test contains test expected Results\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n",
    "\n",
    "X_train_original=X_train\n",
    "X_test_original=X_test\n",
    "y_train_original=y_train\n",
    "y_test_original=y_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9750423b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-26T08:40:06.722284Z",
     "iopub.status.busy": "2024-05-26T08:40:06.721879Z",
     "iopub.status.idle": "2024-05-26T08:40:06.856262Z",
     "shell.execute_reply": "2024-05-26T08:40:06.855028Z"
    },
    "papermill": {
     "duration": 0.144442,
     "end_time": "2024-05-26T08:40:06.859040",
     "exception": false,
     "start_time": "2024-05-26T08:40:06.714598",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>MonsoonIntensity</th>\n",
       "      <th>TopographyDrainage</th>\n",
       "      <th>RiverManagement</th>\n",
       "      <th>Deforestation</th>\n",
       "      <th>Urbanization</th>\n",
       "      <th>ClimateChange</th>\n",
       "      <th>DamsQuality</th>\n",
       "      <th>Siltation</th>\n",
       "      <th>AgriculturalPractices</th>\n",
       "      <th>...</th>\n",
       "      <th>IneffectiveDisasterPreparedness</th>\n",
       "      <th>DrainageSystems</th>\n",
       "      <th>CoastalVulnerability</th>\n",
       "      <th>Landslides</th>\n",
       "      <th>Watersheds</th>\n",
       "      <th>DeterioratingInfrastructure</th>\n",
       "      <th>PopulationScore</th>\n",
       "      <th>WetlandLoss</th>\n",
       "      <th>InadequatePlanning</th>\n",
       "      <th>PoliticalFactors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>805665</th>\n",
       "      <td>805665</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>863045</th>\n",
       "      <td>863045</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>496045</th>\n",
       "      <td>496045</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1079364</th>\n",
       "      <td>1079364</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>9</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>191800</th>\n",
       "      <td>191800</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110268</th>\n",
       "      <td>110268</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259178</th>\n",
       "      <td>259178</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131932</th>\n",
       "      <td>131932</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>671155</th>\n",
       "      <td>671155</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121958</th>\n",
       "      <td>121958</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>894365 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              id  MonsoonIntensity  TopographyDrainage  RiverManagement  \\\n",
       "805665    805665                 8                   7                7   \n",
       "863045    863045                 7                   4                4   \n",
       "496045    496045                 6                   5                1   \n",
       "1079364  1079364                 4                   6                6   \n",
       "191800    191800                 6                   3                8   \n",
       "...          ...               ...                 ...              ...   \n",
       "110268    110268                 4                   7                5   \n",
       "259178    259178                 3                   4                6   \n",
       "131932    131932                 5                   4                1   \n",
       "671155    671155                 6                  10                4   \n",
       "121958    121958                 5                   7                2   \n",
       "\n",
       "         Deforestation  Urbanization  ClimateChange  DamsQuality  Siltation  \\\n",
       "805665               6             4              3           13          8   \n",
       "863045               2             4              5            7          3   \n",
       "496045               6             6              7            3          5   \n",
       "1079364              3             3              3            1          5   \n",
       "191800               2             7              4            6          6   \n",
       "...                ...           ...            ...          ...        ...   \n",
       "110268               4             4              5            3          8   \n",
       "259178               5             5              7            6          8   \n",
       "131932               2             3              4            6          8   \n",
       "671155               6             3              6            3          3   \n",
       "121958               5             2              6            2          3   \n",
       "\n",
       "         AgriculturalPractices  ...  IneffectiveDisasterPreparedness  \\\n",
       "805665                       3  ...                                5   \n",
       "863045                       6  ...                                2   \n",
       "496045                       6  ...                                4   \n",
       "1079364                      4  ...                                7   \n",
       "191800                       7  ...                                3   \n",
       "...                        ...  ...                              ...   \n",
       "110268                       4  ...                                5   \n",
       "259178                       2  ...                                3   \n",
       "131932                       3  ...                                3   \n",
       "671155                       5  ...                                5   \n",
       "121958                       5  ...                                4   \n",
       "\n",
       "         DrainageSystems  CoastalVulnerability  Landslides  Watersheds  \\\n",
       "805665                 6                     6           6           5   \n",
       "863045                 6                     5           0           6   \n",
       "496045                 5                     7           6           5   \n",
       "1079364                9                     6           2           5   \n",
       "191800                 5                     2           6           6   \n",
       "...                  ...                   ...         ...         ...   \n",
       "110268                 2                     7           3           7   \n",
       "259178                 7                     3           7           9   \n",
       "131932                 4                     5           3           4   \n",
       "671155                 3                     6           6           5   \n",
       "121958                 6                     4           5           5   \n",
       "\n",
       "         DeterioratingInfrastructure  PopulationScore  WetlandLoss  \\\n",
       "805665                             5                2            6   \n",
       "863045                             2                5            4   \n",
       "496045                             4                9            3   \n",
       "1079364                            4                7            7   \n",
       "191800                             5                5            4   \n",
       "...                              ...              ...          ...   \n",
       "110268                             6                2            4   \n",
       "259178                             7                3            2   \n",
       "131932                             5                3            6   \n",
       "671155                             5                4            4   \n",
       "121958                             5                7            4   \n",
       "\n",
       "         InadequatePlanning  PoliticalFactors  \n",
       "805665                    4                 7  \n",
       "863045                    3                 4  \n",
       "496045                    5                 3  \n",
       "1079364                   4                 1  \n",
       "191800                    4                10  \n",
       "...                     ...               ...  \n",
       "110268                    5                 5  \n",
       "259178                    3                 8  \n",
       "131932                    7                 7  \n",
       "671155                    5                 5  \n",
       "121958                    4                 7  \n",
       "\n",
       "[894365 rows x 21 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train_original"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e56989c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-26T08:40:06.873950Z",
     "iopub.status.busy": "2024-05-26T08:40:06.873570Z",
     "iopub.status.idle": "2024-05-26T08:40:06.879347Z",
     "shell.execute_reply": "2024-05-26T08:40:06.878204Z"
    },
    "papermill": {
     "duration": 0.016435,
     "end_time": "2024-05-26T08:40:06.882040",
     "exception": false,
     "start_time": "2024-05-26T08:40:06.865605",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shape of X_train: (894365, 21)\n"
     ]
    }
   ],
   "source": [
    "print(\"Shape of X_train:\", X_train.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8a262b96",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-26T08:40:06.896659Z",
     "iopub.status.busy": "2024-05-26T08:40:06.896246Z",
     "iopub.status.idle": "2024-05-26T08:40:06.901541Z",
     "shell.execute_reply": "2024-05-26T08:40:06.900533Z"
    },
    "papermill": {
     "duration": 0.015265,
     "end_time": "2024-05-26T08:40:06.903831",
     "exception": false,
     "start_time": "2024-05-26T08:40:06.888566",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Define PCR pipeline\n",
    "model = Pipeline([\n",
    "    ('pca', PCA()),  # PCA for dimensionality reduction\n",
    "    ('linear_regression', LinearRegression())  # Linear regression\n",
    "])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1a22da5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-26T08:40:06.919524Z",
     "iopub.status.busy": "2024-05-26T08:40:06.918748Z",
     "iopub.status.idle": "2024-05-26T08:40:06.924032Z",
     "shell.execute_reply": "2024-05-26T08:40:06.922971Z"
    },
    "papermill": {
     "duration": 0.015922,
     "end_time": "2024-05-26T08:40:06.926633",
     "exception": false,
     "start_time": "2024-05-26T08:40:06.910711",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "going to train model\n"
     ]
    }
   ],
   "source": [
    "print('going to train model')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "3eecabb3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-26T08:40:06.941422Z",
     "iopub.status.busy": "2024-05-26T08:40:06.941066Z",
     "iopub.status.idle": "2024-05-26T08:40:09.160727Z",
     "shell.execute_reply": "2024-05-26T08:40:09.159312Z"
    },
    "papermill": {
     "duration": 2.23019,
     "end_time": "2024-05-26T08:40:09.163459",
     "exception": false,
     "start_time": "2024-05-26T08:40:06.933269",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;pca&#x27;, PCA()), (&#x27;linear_regression&#x27;, LinearRegression())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;pca&#x27;, PCA()), (&#x27;linear_regression&#x27;, LinearRegression())])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">PCA</label><div class=\"sk-toggleable__content\"><pre>PCA()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "Pipeline(steps=[('pca', PCA()), ('linear_regression', LinearRegression())])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Reshape y_train to a 1D array\n",
    "#y_train = np.ravel(y_train)\n",
    "\n",
    "#training the model\n",
    "\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "949ad7a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-26T08:40:09.179989Z",
     "iopub.status.busy": "2024-05-26T08:40:09.179592Z",
     "iopub.status.idle": "2024-05-26T08:40:09.281339Z",
     "shell.execute_reply": "2024-05-26T08:40:09.277107Z"
    },
    "papermill": {
     "duration": 0.114562,
     "end_time": "2024-05-26T08:40:09.285698",
     "exception": false,
     "start_time": "2024-05-26T08:40:09.171136",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error (MAE): 0.015792470799283403\n",
      "Mean Squared Error (MSE): 0.00040320653051216716\n",
      "Root Mean Squared Error (RMSE): 0.020080003249804697\n",
      "R-squared (R²) Score: 0.8448773580510154\n"
     ]
    }
   ],
   "source": [
    "# Predicting the values on the basis of sample\n",
    "\n",
    "# Predictions on the test set\n",
    "prediction = model.predict(X_test)\n",
    "\n",
    "# Calculate evaluation metrics\n",
    "mae = mean_absolute_error(y_test, prediction)\n",
    "mse = mean_squared_error(y_test, prediction)\n",
    "rmse = np.sqrt(mse)\n",
    "r2 = r2_score(y_test, prediction)\n",
    "\n",
    "# Print the evaluation metrics\n",
    "\n",
    "# Evaluation metrics\n",
    "\n",
    "print(f\"Mean Absolute Error (MAE): {mae}\")\n",
    "print(f\"Mean Squared Error (MSE): {mse}\")\n",
    "print(f\"Root Mean Squared Error (RMSE): {rmse}\")\n",
    "print(f\"R-squared (R²) Score: {r2}\")\n",
    "\n",
    "# Evaluate the performance of the classifier ( this is used to identify the Accuracy of Classification Model)\n",
    "#accuracy = accuracy_score(y_test, prediction)\n",
    "#print(\"Accuracy:\", accuracy)\n",
    "\n",
    "\n",
    "\n",
    "# Mean Absolute Error (MAE): 0.01583093808988759\n",
    "# Mean Squared Error (MSE): 0.00040186552736870556\n",
    "# Root Mean Squared Error (RMSE): 0.020046583932648115\n",
    "# R-squared (R²) Score: 0.8457744976398425\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "8263e686",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-26T08:40:09.319185Z",
     "iopub.status.busy": "2024-05-26T08:40:09.318140Z",
     "iopub.status.idle": "2024-05-26T08:40:15.234478Z",
     "shell.execute_reply": "2024-05-26T08:40:15.233467Z"
    },
    "papermill": {
     "duration": 5.936075,
     "end_time": "2024-05-26T08:40:15.237279",
     "exception": false,
     "start_time": "2024-05-26T08:40:09.301204",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Getting Column Names from Original Input dataframe and extractingn the same columns from polynomial array \n",
    "\n",
    "# Get feature names for the polynomial features\n",
    "feature_names = X_test_original.columns\n",
    "\n",
    "# Create a DataFrame for polynomial features to easily identify the original features\n",
    "input_df = pd.DataFrame(X_test, columns=feature_names)\n",
    "\n",
    "# Create a DataFrame for output data ( this dataframe will further be concatenated with Prediction so that accurace of the model could be gauged)\n",
    "output_df = pd.DataFrame(y_test, columns=['FloodProbability'])  # Replace with appropriate column name\n",
    "output_df.rename(columns={'FloodProbability': 'FloodProbability_test'}, inplace=True)\n",
    "\n",
    "# Create a DataFrame for prediction results\n",
    "prediction_df = pd.DataFrame(prediction, columns=['FloodProbability_Predicted'])  # Assuming prediction is a 1D array\n",
    "\n",
    "\n",
    "\n",
    "#writing output in CSV for further asessment \n",
    "\n",
    "input_df.to_csv('/kaggle/working/input_FloodPrediction_PCR.csv', index=False)\n",
    "output_df.to_csv('/kaggle/working/output_FloodPrediction_PCR.csv', index=False)\n",
    "prediction_df.to_csv('/kaggle/working/FloodPrediction_PCR.csv', index=False)\n",
    "\n",
    "\n",
    "\n",
    "df_input_csv= pd.read_csv('/kaggle/working/input_FloodPrediction_PCR.csv')\n",
    "df_output_csv= pd.read_csv('/kaggle/working/output_FloodPrediction_PCR.csv')\n",
    "df_prediction_csv= pd.read_csv('/kaggle/working/FloodPrediction_PCR.csv')\n",
    "\n",
    "\n",
    "\n",
    "# Concatenate input, output, and prediction DataFrames along the columns axis\n",
    "combined_df = pd.concat([df_input_csv, df_output_csv,df_prediction_csv], axis=1)\n",
    "\n",
    "\n",
    "\n",
    "combined_df.to_csv('/kaggle/working/FloodPrediction_final_PCR.csv', index=False)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6d8171a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-26T08:40:15.253344Z",
     "iopub.status.busy": "2024-05-26T08:40:15.252985Z",
     "iopub.status.idle": "2024-05-26T08:40:35.274900Z",
     "shell.execute_reply": "2024-05-26T08:40:35.273666Z"
    },
    "papermill": {
     "duration": 20.033319,
     "end_time": "2024-05-26T08:40:35.277844",
     "exception": false,
     "start_time": "2024-05-26T08:40:15.244525",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#producing Results for Submission to Kagal on Kagal provided files\n",
    "\n",
    "# importing CSV with training data\n",
    "file_path = '/kaggle/input/flood-regression-dataset/test.csv'\n",
    "\n",
    "df22=pd.read_csv(file_path)\n",
    "\n",
    "df22.to_csv('/kaggle/working/Data_before_prediction_PCR.csv', index=False)\n",
    "\n",
    "#defining input and output dataframes\n",
    "Xa=df22.copy()\n",
    "\n",
    "#Xa_Scalled = scaler.fit_transform(Xa)\n",
    "\n",
    "\n",
    "\n",
    "#predicting results\n",
    "prediction_submission=model.predict(Xa)\n",
    "\n",
    "# Create a DataFrame for prediction results\n",
    "prediction_df_final = pd.DataFrame(prediction_submission, columns=['FloodProbability'])  # Assuming prediction is a 1D array\n",
    "\n",
    "prediction_df_final.to_csv('/kaggle/working/output_df_results_PCR.csv', index=False)\n",
    "\n",
    "\n",
    "# Create a DataFrame for input data\n",
    "\n",
    "# Get feature names for the polynomial features\n",
    "feature_names = Xa.columns\n",
    "\n",
    "# Create a DataFrame for polynomial features to easily identify the original features\n",
    "input_df = pd.DataFrame(Xa, columns=feature_names)\n",
    "\n",
    "\n",
    "#input_df = pd.DataFrame(Xa, columns=Xa.columns.tolist())  # Replace with appropriate column names\n",
    "\n",
    "input_df.to_csv('/kaggle/working/input_df_results_PCR.csv', index=False)\n",
    "\n",
    "\n",
    "df_input_csv_fin= pd.read_csv('/kaggle/working/input_df_results_PCR.csv')\n",
    "df_output_csv_fin= pd.read_csv('/kaggle/working/output_df_results_PCR.csv')\n",
    "\n",
    "df_input_csv_fin=df_input_csv_fin[['id']]\n",
    "# Concatenate input, output, and prediction DataFrames along the columns axis\n",
    "combined_df_fin = pd.concat([df_input_csv_fin, df_output_csv_fin], axis=1)\n",
    "\n",
    "\n",
    "combined_df_fin.to_csv('/kaggle/working/combined_df_fin_PCR.csv', index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d3c0a8f2",
   "metadata": {
    "papermill": {
     "duration": 0.006731,
     "end_time": "2024-05-26T08:40:35.291941",
     "exception": false,
     "start_time": "2024-05-26T08:40:35.285210",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5080885,
     "sourceId": 8511546,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 37.898164,
   "end_time": "2024-05-26T08:40:35.819910",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-05-26T08:39:57.921746",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
